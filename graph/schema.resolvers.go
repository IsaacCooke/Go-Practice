package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.27

import (
	"context"
	"fmt"
	"golearn/graph/model"
)

// CreateMovie is the resolver for the createMovie field.
func (r *mutationResolver) CreateMovie(ctx context.Context, newMovie model.NewMovie) (*model.Movie, error) {
	movie := model.Movie{
		Title: newMovie.Title,
		URL:   newMovie.URL,
	}

	fmt.Println("Create Movie resolver called")

	return &movie, nil
}

// Movies is the resolver for the movies field.
func (r *queryResolver) Movies(ctx context.Context) ([]*model.Movie, error) {
	movies := []*model.Movie{
		{
			Title: "The Matrix",
			URL:   "https://www.imdb.com/title/tt0133093/",
		},
		{
			Title: "The Matrix Reloaded",
			URL:   "https://www.imdb.com/title/tt0234215/",
		},
		{
			Title: "The Matrix Revolutions",
			URL:   "https://www.imdb.com/title/tt0242653/",
		},
	}

	fmt.Println("Movies resolver called")

	return movies, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
